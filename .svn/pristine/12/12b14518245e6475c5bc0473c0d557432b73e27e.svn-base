package com.tetrasoft.data.cliente;

import java.sql.Connection;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import com.technique.engine.data.DataTypes;
import com.technique.engine.util.ExceptionWarning;
import com.tetrasoft.common.data.BasePersistentEntity;
import com.tetrasoft.common.data.Listable;

public class TaskEntity extends BasePersistentEntity implements Listable{

	public static final int STATUS_ABERTO 		= 0;
	public static final int STATUS_FINALIZADO 	= 1;
	
	public static final int TIPO_LEMBRETE		= 1;
	public static final int TIPO_EMAIL		 	= 2;

	private static Object[] structurePk = new Object[]{
		"IdTask","idTask", DataTypes.JAVA_LONG
	};

	private static Object[] structure = new Object[]{
		"IdEntity","idEntity", DataTypes.JAVA_LONG,
		"IdSala","idSala", DataTypes.JAVA_LONG,
		"Participantes","participantes", DataTypes.JAVA_INTEGER,
		"Departamento","departamento", DataTypes.JAVA_STRING,
		"Emails","emails", DataTypes.JAVA_STRING,
		"EmailSolicitante","emailSolicitante", DataTypes.JAVA_STRING,	
		"DuracaoReuniao","duracaoReuniao", DataTypes.JAVA_STRING,		
		"Entity","entity", DataTypes.JAVA_STRING,  
		"IdUsuario","idUsuario", DataTypes.JAVA_LONG,
		"IdGoogle","idGoogle", DataTypes.JAVA_LONG,
		"Tipo","tipo", DataTypes.JAVA_INTEGER , 
		"DataHoraPrazo","dataHoraPrazo", DataTypes.JAVA_DATETIME,
		"DataHoraPrazoFinal","dataHoraPrazoFinal", DataTypes.JAVA_DATETIME,		
		"DataHoraExecucao","dataHoraExecucao", DataTypes.JAVA_DATETIME,  
		"DataHoraLembrete","dataHoraLembrete", DataTypes.JAVA_DATETIME,  
		"LembreteEnviado","lembreteEnviado", DataTypes.JAVA_INTEGER , 
		"Titulo","titulo", DataTypes.JAVA_STRING,  
		"Descricao","descricao", DataTypes.JAVA_STRING,  
		"Status","status", DataTypes.JAVA_INTEGER  
	};

	public Object[] getStructure(){
		return structure;
	}

	public Object[] getStructurePk(){
		return structurePk;
	}

	public String getTableName(){
		return "task";
	}

	public String get_IDFieldName(){
		return "idTask";
	}

	public String get_NomeFieldName(){
		return "descricao";
	}

	public String get_SelecioneName(){
		return LABEL_SELECIONE;
	}
	
	private String emailSolicitante;
	private String duracaoReuniao;
	private String emails;
	private Long   idTask = new Long(0);
	private Long   idEntity = new Long(0);
	private String entity = "";
	private Long   idUsuario = new Long(0);
	private Long   idGoogle = new Long(0);
	private Integer tipo = TIPO_LEMBRETE;
	private Date dataHoraPrazo = new Date();
	private Date dataHoraPrazoFinal = new Date();
	private Date dataHoraExecucao = new Date();
	private Date dataHoraLembrete = new Date();
	private Integer lembreteEnviado = 0;
	private String titulo = "";
	private String descricao = "";
	private Long idSala;
	private String departamento;
	private Integer participantes;
	
	
	
	
	public Long getIdSala() {
		return idSala;
	}

	public void setIdSala(Long idSala) {
		this.idSala = idSala;
	}

	public String getDepartamento() {
		return departamento;
	}

	public void setDepartamento(String departamento) {
		this.departamento = departamento;
	}	

	public Integer getParticipantes() {
		return participantes;
	}

	public void setParticipantes(Integer participantes) {
		this.participantes = participantes;
	}

	public Date getDataHoraPrazoFinal() {
		return dataHoraPrazoFinal;
	}

	public void setDataHoraPrazoFinal(Date dataHoraPrazoFinal) {
		this.dataHoraPrazoFinal = dataHoraPrazoFinal;
	}

	public String getDuracaoReuniao() {
		return duracaoReuniao;
	}

	public void setDuracaoReuniao(String duracaoReuniao) {
		this.duracaoReuniao = duracaoReuniao;
	}
	
	

	public String getEmailSolicitante() {
		return emailSolicitante;
	}

	public void setEmailSolicitante(String emailSolicitante) {
		this.emailSolicitante = emailSolicitante;
	}

	private Integer status = 0;

	public Long getIdTask() {
		return idTask;
	}

	public void setIdTask(Long idTask) {
		this.idTask = idTask;
	}

	public Long getIdEntity() {
		return idEntity;
	}

	public void setIdEntity(Long idEntity) {
		this.idEntity = idEntity;
	}

	public String getEntity() {
		return entity;
	}

	public void setEntity(String entity) {
		this.entity = entity;
	}

	public Long getIdUsuario() {
		return idUsuario;
	}

	public void setIdUsuario(Long idUsuario) {
		this.idUsuario = idUsuario;
	}
	
	public Long getIdGoogle() {
		return idGoogle;
	}

	public void setIdGoogle(Long idGoogle) {
		this.idGoogle = idGoogle;
	}

	public String getEmails() {
		return emails;
	}

	public void setEmails(String emails) {
		this.emails = emails;
	}

	public Date getDataHoraPrazo() {
		return dataHoraPrazo;
	}

	public void setDataHoraPrazo(Date dataHoraPrazo) {
		this.dataHoraPrazo = dataHoraPrazo;
	}

	public Date getDataHoraExecucao() {
		return dataHoraExecucao;
	}

	public void setDataHoraExecucao(Date dataHoraExecucao) {
		this.dataHoraExecucao = dataHoraExecucao;
	}

	public Date getDataHoraLembrete() {
		return dataHoraLembrete;
	}

	public void setDataHoraLembrete(Date dataHoraLembrete) {
		this.dataHoraLembrete = dataHoraLembrete;
	}
	
	public Integer getTipo() {
		return tipo;
	}

	public void setTipo(Integer tipo) {
		this.tipo = tipo;
	}

	public Integer getLembreteEnviado() {
		return lembreteEnviado;
	}

	public void setLembreteEnviado(Integer lembreteEnviado) {
		this.lembreteEnviado = lembreteEnviado;
	}
	
	public String getTitulo() {
		return titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	public String getDescricao() {
		return descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}
	
	public void update( String id, Date data , Connection conn) {
		try {
			this.setIdTask( new Long(id) );
			if( this.getThis(conn) ) {
				this.setDataHoraPrazo( data );
				this.update(conn);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void save( long idUsuario, String evento, Date data, Connection conn ) { // inclusão direta, clicando pelo calendário
		try {
			GregorianCalendar cal = new GregorianCalendar();
			cal.setTime(data);
			cal.set( GregorianCalendar.HOUR_OF_DAY, 8 );
			data = cal.getTime();
			
			this.setIdTask( getNextId() );
			this.setIdUsuario(idUsuario);
			this.setEntity(null);
			this.setDuracaoReuniao(this.duracaoReuniao);
			this.setEmails(this.emails);
			this.setEmailSolicitante(this.emailSolicitante);
			this.setIdEntity(null);
			this.setDataHoraExecucao(null);
			this.setDataHoraLembrete(null);
			this.setLembreteEnviado(null);
			this.setTipo(TIPO_LEMBRETE);
			this.setTitulo("");
			this.setIdSala(this.idSala);
			this.setDepartamento(this.departamento);
			this.setParticipantes(this.participantes);			
			this.setDescricao(evento);
			this.setDataHoraPrazo( data );
			this.setStatus( STATUS_ABERTO );
			this.insert(conn);
		} catch (Exception e) {
			e.printStackTrace(); 
		}
	}
	
	public void done( String id, String status, Connection conn ) {
		try {
			this.setIdTask( new Long(id) );
			this.getThis(conn);
			
			if( Integer.parseInt(status) == STATUS_FINALIZADO ) {
				this.setDataHoraExecucao( new Date() );
				this.setStatus( STATUS_FINALIZADO );
			} else {
				this.setDataHoraExecucao(null);
				this.setStatus( STATUS_ABERTO );
			}
			
			this.update(conn);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public Connection retrieveConnection() throws ExceptionWarning {
		return getConnection();
	}
}